import warnings
warnings.filterwarnings('ignore')
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from sklearn import metrics
data = pd.read_csv(r"C:\Users\prana\Downloads\car_dataset.csv")

data.head()

data.tail()
data.shape
print("Number of Rows",data.shape[0])
print("Number of Columns",data.shape[1])
data.info()
data.isnull().sum()
data.describe()
data.head(1)
import datetime
date_time = datetime.datetime.now()
data['Age']=date_time.year - data['Year']
data.head()
data.drop('Year',axis=1,inplace=True)
data.head()
numerical_features = ['Present_Price', 'Kms_Driven', 'Owner', 'Age']
for feature in numerical_features:
    plt.figure(figsize=(8, 6))
    sns.histplot(data[feature], kde=True, bins=30, color='skyblue')
    plt.title(f'Distribution of {feature}')
    plt.show()
sns.boxplot(data['Selling_Price'])
sorted(data['Selling_Price'],reverse=True)
data = data[~(data['Selling_Price']>=33.0) & (data['Selling_Price']<=35.0)]
data.shape
data.head(1)
data['Fuel_Type'].unique()
data['Fuel_Type'] = data['Fuel_Type'].map({'Petrol':0,'Diesel':1,'CNG':2})
data['Fuel_Type'].unique()
data['Seller_Type'].unique()
data['Seller_Type'] = data['Seller_Type'].map({'Dealer':0,'Individual':1})
data['Seller_Type'].unique()
data['Transmission'].unique()
data['Transmission'] =data['Transmission'].map({'Manual':0,'Automatic':1})
data['Transmission'].unique()
data.head()
X = data.drop(['Car_Name','Selling_Price'],axis=1)
y = data['Selling_Price']
y
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=42)
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import GradientBoostingRegressor
from xgboost import XGBRegressor
lr = LinearRegression()
lr.fit(X_train,y_train)
